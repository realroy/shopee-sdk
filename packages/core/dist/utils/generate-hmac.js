export async function generateHmac(key,...data){let digest;if(typeof globalThis.crypto!=="undefined"){digest=await generateHmacWithWebCryptoAPI(key,...data)}digest=await generateHmacWithNodeCrypto(key,...data);return digest}async function generateHmacWithWebCryptoAPI(key,...data){const encoder=new TextEncoder;const keyUint8Array=encoder.encode(key);let messageUint8Array=new Uint8Array;data.forEach(datum=>{if(!datum){return}messageUint8Array=encoder.encode(datum)});const cryptoKey=await crypto.subtle.importKey("raw",keyUint8Array,{name:"HMAC",hash:"SHA-256"},false,["sign"]);const signature=await crypto.subtle.sign({name:"HMAC",hash:{name:"sha-256"}},cryptoKey,messageUint8Array);const signatureArray=new Uint8Array(signature);const signatureHex=Array.from(signatureArray).map(b=>b.toString(16).padStart(2,"0")).join("");return signatureHex}async function generateHmacWithNodeCrypto(key,...data){const{createHmac}=await import("crypto");const hmac=createHmac("sha256",key);data.filter(s=>!!s).forEach(s=>hmac.update(s));return hmac.digest("hex")}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9nZW5lcmF0ZS1obWFjLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUhtYWMoa2V5OiBzdHJpbmcsIC4uLmRhdGE6IHN0cmluZ1tdKSB7XG4gIGxldCBkaWdlc3Q6IHN0cmluZ1xuICBpZiAodHlwZW9mIGdsb2JhbFRoaXMuY3J5cHRvICE9PSAndW5kZWZpbmVkJykge1xuICAgIGRpZ2VzdCA9IGF3YWl0IGdlbmVyYXRlSG1hY1dpdGhXZWJDcnlwdG9BUEkoa2V5LCAuLi5kYXRhKVxuICB9XG5cbiAgZGlnZXN0ID0gYXdhaXQgZ2VuZXJhdGVIbWFjV2l0aE5vZGVDcnlwdG8oa2V5LCAuLi5kYXRhKVxuICBcbiAgcmV0dXJuIGRpZ2VzdFxufVxuXG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUhtYWNXaXRoV2ViQ3J5cHRvQVBJKGtleTogc3RyaW5nLCAuLi5kYXRhOiBzdHJpbmdbXSkge1xuICBjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG4gIGNvbnN0IGtleVVpbnQ4QXJyYXkgPSBlbmNvZGVyLmVuY29kZShrZXkpO1xuICBsZXQgbWVzc2FnZVVpbnQ4QXJyYXkgPSBuZXcgVWludDhBcnJheSgpO1xuXG4gIGRhdGEuZm9yRWFjaCgoZGF0dW0pID0+IHtcbiAgICBpZiAoIWRhdHVtKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbWVzc2FnZVVpbnQ4QXJyYXkgPSBlbmNvZGVyLmVuY29kZShkYXR1bSk7XG4gIH0pO1xuXG4gIGNvbnN0IGNyeXB0b0tleSA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KFxuICAgIFwicmF3XCIsXG4gICAga2V5VWludDhBcnJheSxcbiAgICB7IG5hbWU6IFwiSE1BQ1wiLCBoYXNoOiBcIlNIQS0yNTZcIiB9LFxuICAgIGZhbHNlLFxuICAgIFtcInNpZ25cIl1cbiAgKTtcblxuICBjb25zdCBzaWduYXR1cmUgPSBhd2FpdCBjcnlwdG8uc3VidGxlLnNpZ24oXG4gICAgeyBuYW1lOiBcIkhNQUNcIiwgaGFzaDogeyBuYW1lOiBcInNoYS0yNTZcIiB9IH0sXG4gICAgY3J5cHRvS2V5LFxuICAgIG1lc3NhZ2VVaW50OEFycmF5XG4gICk7XG5cbiAgY29uc3Qgc2lnbmF0dXJlQXJyYXkgPSBuZXcgVWludDhBcnJheShzaWduYXR1cmUpO1xuICBjb25zdCBzaWduYXR1cmVIZXggPSBBcnJheS5mcm9tKHNpZ25hdHVyZUFycmF5KVxuICAgIC5tYXAoKGIpID0+IGIudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsIFwiMFwiKSlcbiAgICAuam9pbihcIlwiKTtcblxuICByZXR1cm4gc2lnbmF0dXJlSGV4O1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUhtYWNXaXRoTm9kZUNyeXB0byhrZXk6IHN0cmluZywgLi4uZGF0YTogc3RyaW5nW10pIHtcbiAgY29uc3QgeyBjcmVhdGVIbWFjIH0gPSBhd2FpdCBpbXBvcnQoXCJjcnlwdG9cIik7XG4gIGNvbnN0IGhtYWMgPSBjcmVhdGVIbWFjKFwic2hhMjU2XCIsIGtleSk7XG4gIGRhdGEuZmlsdGVyKChzKSA9PiAhIXMpLmZvckVhY2goKHMpID0+IGhtYWMudXBkYXRlKHMpKTtcblxuICByZXR1cm4gaG1hYy5kaWdlc3QoXCJoZXhcIik7XG59XG4iXSwibmFtZXMiOlsiZ2VuZXJhdGVIbWFjIiwia2V5IiwiZGF0YSIsImRpZ2VzdCIsImdsb2JhbFRoaXMiLCJjcnlwdG8iLCJnZW5lcmF0ZUhtYWNXaXRoV2ViQ3J5cHRvQVBJIiwiZ2VuZXJhdGVIbWFjV2l0aE5vZGVDcnlwdG8iLCJlbmNvZGVyIiwiVGV4dEVuY29kZXIiLCJrZXlVaW50OEFycmF5IiwiZW5jb2RlIiwibWVzc2FnZVVpbnQ4QXJyYXkiLCJVaW50OEFycmF5IiwiZm9yRWFjaCIsImRhdHVtIiwiY3J5cHRvS2V5Iiwic3VidGxlIiwiaW1wb3J0S2V5IiwibmFtZSIsImhhc2giLCJzaWduYXR1cmUiLCJzaWduIiwic2lnbmF0dXJlQXJyYXkiLCJzaWduYXR1cmVIZXgiLCJBcnJheSIsImZyb20iLCJtYXAiLCJiIiwidG9TdHJpbmciLCJwYWRTdGFydCIsImpvaW4iLCJjcmVhdGVIbWFjIiwiaG1hYyIsImZpbHRlciIsInMiLCJ1cGRhdGUiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sZUFBZUEsYUFBYUMsR0FBVyxDQUFFLEdBQUdDLElBQWMsRUFDL0QsSUFBSUMsT0FDSixHQUFJLE9BQU9DLFdBQVdDLE1BQU0sR0FBSyxZQUFhLENBQzVDRixPQUFTLE1BQU1HLDZCQUE2QkwsT0FBUUMsS0FDdEQsQ0FFQUMsT0FBUyxNQUFNSSwyQkFBMkJOLE9BQVFDLE1BRWxELE9BQU9DLE1BQ1QsQ0FFQSxlQUFlRyw2QkFBNkJMLEdBQVcsQ0FBRSxHQUFHQyxJQUFjLEVBQ3hFLE1BQU1NLFFBQVUsSUFBSUMsWUFDcEIsTUFBTUMsY0FBZ0JGLFFBQVFHLE1BQU0sQ0FBQ1YsS0FDckMsSUFBSVcsa0JBQW9CLElBQUlDLFdBRTVCWCxLQUFLWSxPQUFPLENBQUMsQUFBQ0MsUUFDWixHQUFJLENBQUNBLE1BQU8sQ0FDVixNQUNGLENBRUFILGtCQUFvQkosUUFBUUcsTUFBTSxDQUFDSSxNQUNyQyxHQUVBLE1BQU1DLFVBQVksTUFBTVgsT0FBT1ksTUFBTSxDQUFDQyxTQUFTLENBQzdDLE1BQ0FSLGNBQ0EsQ0FBRVMsS0FBTSxPQUFRQyxLQUFNLFNBQVUsRUFDaEMsTUFDQSxDQUFDLE9BQU8sRUFHVixNQUFNQyxVQUFZLE1BQU1oQixPQUFPWSxNQUFNLENBQUNLLElBQUksQ0FDeEMsQ0FBRUgsS0FBTSxPQUFRQyxLQUFNLENBQUVELEtBQU0sU0FBVSxDQUFFLEVBQzFDSCxVQUNBSixtQkFHRixNQUFNVyxlQUFpQixJQUFJVixXQUFXUSxXQUN0QyxNQUFNRyxhQUFlQyxNQUFNQyxJQUFJLENBQUNILGdCQUM3QkksR0FBRyxDQUFDLEFBQUNDLEdBQU1BLEVBQUVDLFFBQVEsQ0FBQyxJQUFJQyxRQUFRLENBQUMsRUFBRyxNQUN0Q0MsSUFBSSxDQUFDLElBRVIsT0FBT1AsWUFDVCxDQUVBLGVBQWVqQiwyQkFBMkJOLEdBQVcsQ0FBRSxHQUFHQyxJQUFjLEVBQ3RFLEtBQU0sQ0FBRThCLFVBQVUsQ0FBRSxDQUFHLE1BQU0sTUFBTSxDQUFDLFVBQ3BDLE1BQU1DLEtBQU9ELFdBQVcsU0FBVS9CLEtBQ2xDQyxLQUFLZ0MsTUFBTSxDQUFDLEFBQUNDLEdBQU0sQ0FBQyxDQUFDQSxHQUFHckIsT0FBTyxDQUFDLEFBQUNxQixHQUFNRixLQUFLRyxNQUFNLENBQUNELElBRW5ELE9BQU9GLEtBQUs5QixNQUFNLENBQUMsTUFDckIifQ==